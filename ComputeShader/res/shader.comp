#version 450
layout(local_size_x=1,local_size_y=1,local_size_z=1) in;

layout(set=0, binding=0)
uniform SceneParameters
{
  mat4 matView;
  mat4 matProj;
  vec4 modeParams;
};

layout(set=0,binding=1, rgba8)
uniform readonly image2D sourceImage;

layout(set=0,binding=2, rgba8)
uniform image2D destinationImage;

vec3 rgb2hsv(vec3 rgbColor)
{
  vec4 k = vec4(0, -1.0/3.0, 2.0/3.0, -1.0);
  vec4 p = mix(vec4(rgbColor.bg, k.wz), vec4(rgbColor.gb, k.xy), step(rgbColor.b, rgbColor.g));
  vec4 q = mix(vec4(p.xyw, rgbColor.r), vec4(rgbColor.r, p.yzx), step(p.x, rgbColor.r));

  float d = q.x - min(q.w, q.y);
  float e = 1.0e-10;
  return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
}

vec3 hsv2rgb(vec3 color)
{
    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
    vec3 p = abs(fract(color.xxx + K.xyz) * 6.0 - K.www);
    return color.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), color.y);
}


void main()
{
  ivec2 cursor = ivec2(gl_GlobalInvocationID.xy);
  vec4 color = imageLoad(sourceImage, cursor);
  if(modeParams.x < 0.5)
  {
    mat3 toSepia=mat3(
      0.393, 0.349, 0.272,
      0.769, 0.686, 0.534,
      0.189, 0.168, 0.131 );
    color.xyz = toSepia * color.xyz;
  }
  else
  {
    vec3 hsv = rgb2hsv(color.xyz);
    hsv.x = fract(hsv.x + modeParams.y);
    color.xyz = hsv2rgb(hsv);
  }
  imageStore(destinationImage, cursor, color);
}

// 参考文献:
// HSV変換コードは https://gist.github.com/983/e170a24ae8eba2cd174f より.
// https://stackoverflow.com/questions/15095909/from-rgb-to-hsv-in-opengl-glsl にも同様コードが掲載されている.
